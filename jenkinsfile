pipeline {
    agent {
        label 'AGENT-1'
    }
       
    environment{
        appVersion = '' //global variable
        component = 'frontend'
        project = 'expense'
        environment = 'dev'
    }
    stages {
        stage ('Read the version') {
            steps {
                script {
                    def packageJson = readJSON file: 'package.json'
                    appVersion = packageJson.version
                    echo "app version: ${appVersion}"
                }
            }
        }

        stage ('build') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred') {
                    sh """
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 905418383993.dkr.ecr.us-east-1.amazonaws.com
                    docker build -t ${project}/${component}:${appVersion} .
                    docker images
                    docker tag ${project}/${component}:${appVersion} 905418383993.dkr.ecr.us-east-1.amazonaws.com/${project}/${component}:${appVersion}
                    docker push 905418383993.dkr.ecr.us-east-1.amazonaws.com/${project}/${component}:${appVersion}
                    """
                }
            }
        }

        stage ('deploy') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-cred'){
                    sh """
                    aws eks update-kubeconfig --region us-east-1 --name expense-dev
                    cd helm
                    sed -i 's/IMAGE_VERSION/${appVersion}/g'  values-${environment}.yaml
                    helm upgrade --install frontend -n expense -f values-${environment}.yaml .
                    """
                    // sed i - replace in IMAGE_VERSION value with $appversion value , target file is values-dev.yaml
                }
            }
           
        }
    }
}
